// <auto-generated />
using Match.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Match.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Match.Domain.Developer.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IDDEVELOPER");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("ExperienceLevel")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("EXPERIENCE_LEVEL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("DEVELOPER", (string)null);
                });

            modelBuilder.Entity("Match.Domain.DeveloperSkill.DeveloperSkill", b =>
                {
                    b.Property<int>("DeveloperId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IDDEVELOPER");

                    b.Property<int>("SkillId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IDSKILL");

                    b.HasKey("DeveloperId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("DEVELOPER_SKILL", (string)null);
                });

            modelBuilder.Entity("Match.Domain.Project.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IDPROJECT");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<int>("DeveloperSlots")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DEVELOPERSLOTS");

                    b.Property<int>("MinimumExperienceLevel")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("MINIMU_EXPERIENCE_LEVEL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("PROJECT", (string)null);
                });

            modelBuilder.Entity("Match.Domain.ProjectSkill.ProjectSkill", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IDPROJECT");

                    b.Property<int>("SkillId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IDSKILL");

                    b.HasKey("ProjectId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("PROJECT_SKILL", (string)null);
                });

            modelBuilder.Entity("Match.Domain.Skill.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IDSKILL");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("SKILL", (string)null);
                });

            modelBuilder.Entity("Match.Domain.DeveloperSkill.DeveloperSkill", b =>
                {
                    b.HasOne("Match.Domain.Developer.Developer", "Developer")
                        .WithMany("DeveloperSkills")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Match.Domain.Skill.Skill", "Skill")
                        .WithMany("DeveloperSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("Match.Domain.ProjectSkill.ProjectSkill", b =>
                {
                    b.HasOne("Match.Domain.Project.Project", "Project")
                        .WithMany("ProjectSkills")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Match.Domain.Skill.Skill", "Skill")
                        .WithMany("ProjectSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("Match.Domain.Developer.Developer", b =>
                {
                    b.Navigation("DeveloperSkills");
                });

            modelBuilder.Entity("Match.Domain.Project.Project", b =>
                {
                    b.Navigation("ProjectSkills");
                });

            modelBuilder.Entity("Match.Domain.Skill.Skill", b =>
                {
                    b.Navigation("DeveloperSkills");

                    b.Navigation("ProjectSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
